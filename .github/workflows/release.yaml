# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Release
on:
    push:
        branches: [main]
concurrency:
    group: ${{ github.workflow }}
env:
    PYTHON_VERSION: "3.12"
jobs:
    changed-files:
        name: changed-files
        runs-on: ubuntu-latest
        outputs:
            directories: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
            changed: ${{ steps.changed-files.outputs.any_modified }}
        steps:
            - name: Check out the repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Get changed files
              id: changed-files
              uses: tj-actions/changed-files@v45
              with:
                  matrix: true
                  dir_names: true
                  dir_names_max_depth: 3
                  files: |
                      src/packages/**
                      src/services/**
            - name: List Changed Files Outputs
              run: echo "${{ toJSON(steps.changed-files.outputs) }}"
    release:
        name: release
        needs:
            - changed-files
        runs-on: ubuntu-latest
        permissions:
            contents: write
            issues: write
            pull-requests: write
        steps:
            - name: Check out the repository
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2
            - name: Setup Node.js
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              uses: actions/setup-node@v4
              with:
                  node-version: "lts/*"
            - name: Install dependencies
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              run: npm --prefix ${{ github.workspace }}/monorepo/semantic-release clean-install
            - name: Verify NPM Signatures
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              run: npm --prefix ${{ github.workspace }}/monorepo/semantic-release audit signatures
            - name: Setup Python
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
            - name: Install uv
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              uses: astral-sh/setup-uv@v2
            - name: Install Task
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              uses: arduino/setup-task@v2
              with:
                  version: 3.x
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
            - name: Install Dependencies
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              run: task install -- --only-dev
              env:
                  DIR: ${{ github.workspace }}
                  PRE_COMMIT: 0
            - name: Release
              if: ${{ needs.changed-files.outputs.changed == 'true' }}
              run: |
                  for DIRECTORY in ${{ join(fromJSON(needs.changed-files.outputs.directories), ' ') }}
                  do
                      task tools:release DIR=${DIRECTORY}
                  done
              shell: bash
              env:
                  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                  GIT_AUTHOR_NAME: github-actions[bot]
                  GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
                  GIT_COMMITTER_NAME: github-actions[bot]
                  GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
    docs:
        name: docs
        if: github.ref == 'refs/heads/main'
        needs:
            - changed-files
            - release
        runs-on: ubuntu-latest
        permissions:
            pages: write
            id-token: write
            contents: read
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Check for GitHub Pages
              id: pages
              shell: bash
              run: |
                  RESPONSE=$(curl -s -L \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    https://api.github.com/repos/${{ github.repository }}/pages \
                    | jq -c)
                  echo "${RESPONSE}"
                  BUILD_TYPE=$(echo ${RESPONSE} | jq -r '.build_type')
                  if [ "${BUILD_TYPE}" = "workflow" ]; then
                    echo "enabled=true" >> ${GITHUB_OUTPUT}
                    echo "enabled=true"
                  else
                    echo "enabled=false" >> ${GITHUB_OUTPUT}
                    echo "enabled=false"
                  fi
            - name: Check out the repository
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              uses: actions/checkout@v4
            - name: Setup Python
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
            - name: Install uv
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              uses: astral-sh/setup-uv@v2
            - name: Install Task
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              uses: arduino/setup-task@v2
              with:
                  version: 3.x
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
            - name: Install Dependencies
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              run: task install -- --only-dev
              env:
                  PRE_COMMIT: 0
            - name: Build Documentation
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              run: task docs:build
            - name: Setup GitHub Pages
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              uses: actions/configure-pages@v4
            - name: Upload Artifact
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              uses: actions/upload-pages-artifact@v3
              with:
                  path: site/
            - name: Deploy to GitHub Pages
              if: ${{ steps.pages.outputs.enabled == 'true' }}
              id: deployment
              uses: actions/deploy-pages@v4
